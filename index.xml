<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Senkbeil</title>
    <link>http://chipsenkbeil.com/</link>
    <description>Recent content on Senkbeil</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright &amp;#169; by Chip Senkbeil</copyright>
    <lastBuildDate>Sat, 12 Sep 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://chipsenkbeil.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Pepper&#39;s wonderful smile</title>
      <link>http://chipsenkbeil.com/pepper/2015/09/12/000000/</link>
      <pubDate>Sat, 12 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://chipsenkbeil.com/pepper/2015/09/12/000000/</guid>
      <description></description>
    </item>
    
    <item>
      <title>CSS Masonry Layout Attempts</title>
      <link>http://chipsenkbeil.com/note/css-masonry-layout-attempts/</link>
      <pubDate>Wed, 02 Sep 2015 16:52:27 -0500</pubDate>
      
      <guid>http://chipsenkbeil.com/note/css-masonry-layout-attempts/</guid>
      <description>

&lt;p&gt;I spent two days investigating this and could not find a solution that worked.
Eventually, I gave up and added the Masonry Javascript library. My two
attempts were as follows:&lt;/p&gt;

&lt;h3 id=&#34;using-css-columns:a91a7d6dc4988411aae05fc3f68642cf&#34;&gt;Using CSS Columns&lt;/h3&gt;

&lt;p&gt;CSS Columns enabled an easy, powerful way to spread page summaries across
multiple columns. Furthermore, you can prevent page summaries from being
broken up in the middle by using &lt;code&gt;column-break-inside: avoid;&lt;/code&gt;. However, I had
no way to order the page summaries dynamically such that the most recent
summaries were at the top (from left to right) and older summaries were found
further down. Instead, this resulted in the latest summary starting in the top
left with older summaries going down the first column and into the second, etc.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.page-summary-container {
    -moz-column-count: 3;
    -webkit-column-count: 3;
    column-count: 3;

    -moz-column-gap: 0;
    -webkit-column-gap: 0;
    column-gap: 0;
}

.page-summary {
    display: inline-block;
    -webkit-column-break-inside: avoid; /* Chrome, Safari */
    -moz-column-break-inside:avoid;
    -o-column-break-inside:avoid;
    -ms-column-break-inside:avoid;
    column-break-inside:avoid;
    page-break-inside: avoid;           /* Theoretically FF 20+ */
    break-inside: avoid-column;         /* IE 11 */
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;using-flexbox:a91a7d6dc4988411aae05fc3f68642cf&#34;&gt;Using Flexbox&lt;/h3&gt;

&lt;p&gt;This involved using flexbox to simulate a Masonry layout by using
&lt;code&gt;flex-flow: column wrap&lt;/code&gt; to have items flow from top to bottom with no extra
spacing (similar to Masonry). There were two issues with this approach: page
summaries still flowed from top to bottom instead of left to right and
I couldn&amp;rsquo;t control wrapping the column into the next column without providing
a fixed-height container.&lt;/p&gt;

&lt;p&gt;The first issue was able to be solved by swapping the order of the elements,
which you can do in flexbox. Since the list page is using pagination (meaning
that I can guarantee the total page summaries per page), ordering the elements
was as simple as adding child selectors to break up the order based on the
number of elements:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.page-summary:nth-child(3n+1) {
    order: 1;
}

.page-summary:nth-child(3n+2) {
    order: 2;
}

.page-summary:nth-child(3n) {
    order: 3;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Unfortunately, as I couldn&amp;rsquo;t provide a fixed-height container, the column
approach did not work as all elements stayed in the first column. I could not
find any working way to forcefully wrap flexbox elements after a certain
element when using &lt;em&gt;column&lt;/em&gt; as the flow instead of &lt;em&gt;row&lt;/em&gt; (where you can set
the row item to a width of &lt;em&gt;100%&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;I could have forced a specific height for the page summaries as I know how big
the text will be (roughly) if I use an ellipsis for overflow on the title (and
the summary is always 70 words max). However, the optional image throws off my
sizing estimates.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Overview of the Spark Kernel Client Library</title>
      <link>http://chipsenkbeil.com/post/overview-of-the-spark-kernel-client-library/</link>
      <pubDate>Wed, 29 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://chipsenkbeil.com/post/overview-of-the-spark-kernel-client-library/</guid>
      <description>&lt;p&gt;In this third and final part of the Spark Kernel series (part 1, part 2), we
will focus on the client library, a Scala-based library used to interface with
the Spark Kernel. This library enables Scala applications to quickly
communicate with a Spark Kernel without needing to understand ZeroMQ or the
IPython message protocol. Furthermore, using the client library, Scala
applications are able to treat the Spark Kernel as a remote service, meaning
that they can run separately from a Spark cluster and use the kernel as a
remote connection into the cluster.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Spark Kernel Architecture</title>
      <link>http://chipsenkbeil.com/post/spark-kernel-architecture/</link>
      <pubDate>Wed, 22 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://chipsenkbeil.com/post/spark-kernel-architecture/</guid>
      <description>&lt;p&gt;In the first part of the Spark Kernel series, we stepped through the problem
with enabling interactive applications against Apache Spark and how the Spark
Kernel solved this problem. This week, we will focus on the Spark Kernel’s
architecture: how we achieve fault tolerance and scalability using Akka, why
we chose ZeroMQ with the IPython/Jupyter message protocol, what the layers of
functionality are in the kernel (see figure 1 below), and elaborate on an
interactive API from IPython called the Comm API.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to enable interactive applications against Apache Spark</title>
      <link>http://chipsenkbeil.com/post/how-to-enable-interactive-applications-against-apache-spark/</link>
      <pubDate>Wed, 15 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://chipsenkbeil.com/post/how-to-enable-interactive-applications-against-apache-spark/</guid>
      <description>&lt;p&gt;Last December, IBM open sourced a project called the Spark Kernel, an
application focused on interactive usage of Apache Spark. This project
addresses a problem we encountered when trying to migrate a Storm-based
application to Apache Spark, “How do we enable interactive applications
against Apache Spark?”&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Spark Kernel - Meetup Talk</title>
      <link>http://chipsenkbeil.com/talk/2015-07-06-apache-spark-meetup/</link>
      <pubDate>Mon, 06 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://chipsenkbeil.com/talk/2015-07-06-apache-spark-meetup/</guid>
      <description>&lt;div class=&#34;embed video-player&#34;&gt;
    &lt;iframe class=&#34;youtube-player&#34; 
            type=&#34;text/html&#34; 
            width=&#34;640&#34; 
            height=&#34;385&#34; 
            src=&#34;http://www.youtube.com/embed/2AX6g0tK-us&#34; 
            allowfullscreen 
            frameborder=&#34;0&#34;&gt;
    &lt;/iframe&gt;
&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>Pepper in the bathtub</title>
      <link>http://chipsenkbeil.com/pepper/2015/05/24/114745571/</link>
      <pubDate>Sun, 24 May 2015 00:00:00 +0000</pubDate>
      
      <guid>http://chipsenkbeil.com/pepper/2015/05/24/114745571/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Pepper rolling in the grass</title>
      <link>http://chipsenkbeil.com/pepper/2015/05/23/132236375/</link>
      <pubDate>Sat, 23 May 2015 00:00:00 +0000</pubDate>
      
      <guid>http://chipsenkbeil.com/pepper/2015/05/23/132236375/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Pepper with a tree limb</title>
      <link>http://chipsenkbeil.com/pepper/2015/05/02/161726144/</link>
      <pubDate>Sat, 02 May 2015 00:00:00 +0000</pubDate>
      
      <guid>http://chipsenkbeil.com/pepper/2015/05/02/161726144/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Pepper settle in for a car ride</title>
      <link>http://chipsenkbeil.com/pepper/2015/03/09/174803952/</link>
      <pubDate>Mon, 09 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>http://chipsenkbeil.com/pepper/2015/03/09/174803952/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Pepper staring at the camera while resting</title>
      <link>http://chipsenkbeil.com/pepper/2015/02/14/124613171/</link>
      <pubDate>Sat, 14 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>http://chipsenkbeil.com/pepper/2015/02/14/124613171/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Pepper close to the camera</title>
      <link>http://chipsenkbeil.com/pepper/2015/02/08/151034786/</link>
      <pubDate>Sun, 08 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>http://chipsenkbeil.com/pepper/2015/02/08/151034786/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Pepper tired after the dogpark</title>
      <link>http://chipsenkbeil.com/pepper/2015/02/01/120930954/</link>
      <pubDate>Sun, 01 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>http://chipsenkbeil.com/pepper/2015/02/01/120930954/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Pepper with a stick</title>
      <link>http://chipsenkbeil.com/pepper/2014/11/28/175213579/</link>
      <pubDate>Fri, 28 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>http://chipsenkbeil.com/pepper/2014/11/28/175213579/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Pepper in her Halloween costume</title>
      <link>http://chipsenkbeil.com/pepper/2014/10/30/175432708/</link>
      <pubDate>Thu, 30 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>http://chipsenkbeil.com/pepper/2014/10/30/175432708/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>