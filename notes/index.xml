<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notes on Chip Senkbeil</title>
    <link>https://chipsenkbeil.com/notes/</link>
    <description>Recent content in Notes on Chip Senkbeil</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 19 Apr 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://chipsenkbeil.com/notes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Configuring Calibre Server from CLI</title>
      <link>https://chipsenkbeil.com/notes/configuring-calibre-server-from-cli/</link>
      <pubDate>Sun, 19 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://chipsenkbeil.com/notes/configuring-calibre-server-from-cli/</guid>
      <description>Watching
Installing on a FreeBSD Jail Very easy to do on FreeBSD 11.3 via the FreeNAS GUI.
 Create a new jail and set a specific IPv4 address to host. For me, this was 192.168.5.33 Enter into a shell within the jail and run pkg install calibre  FreeBSD will ask if we want to download and set up the package manager, which we do. After that, it&amp;rsquo;ll install a lot of packages (Python 3.</description>
    </item>
    
    <item>
      <title>Linux Virtual Monitors with xrandr</title>
      <link>https://chipsenkbeil.com/notes/linux-virtual-monitors-with-xrandr/</link>
      <pubDate>Wed, 14 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://chipsenkbeil.com/notes/linux-virtual-monitors-with-xrandr/</guid>
      <description>I recently learned that you can configure virtual monitors with xrandr. There are two different ways to use this: treat multiple physical monitors as one giant virtual monitor or treat one physical monitor as multiple virtual monitors.
 Note that this requires xrandr 1.5.0 or higher, which introduces setmonitor as an option in the CLI.
 Why do I want to do this? My primary interest here is to split a super widescreen monitor like the Dell 49&amp;rdquo; UltraSharp Curved Monitor (U4919DW) as multiple separate displays.</description>
    </item>
    
    <item>
      <title>Qutebrowser Cheatsheet</title>
      <link>https://chipsenkbeil.com/notes/qutebrowser-cheatsheet/</link>
      <pubDate>Wed, 03 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://chipsenkbeil.com/notes/qutebrowser-cheatsheet/</guid>
      <description> Tabs Navigating Tabs    Key Combination Description     Shift+j Go to next tab (to the right), looping around to first tab if at the end   Shift+k Go to previous tab (to the left), looping around to last tab if at the beginning   gt Open list of tabs to fuzzy search and jump to specified tab   +Shift+t Go to tab at N    Moving Tabs    Key Combination Description     gD Move current tab to new window    Deleting Tabs    Key Combination Description     d Close current tab   co Close all tabs but current tab    Element Selection Select Input    Key Combination Description     gi Go to primary input textbox (not sure how it decides)   ;t Provide hints for selecting an input textbox    Select Hyperlink on Page    Key Combination Description     f Provide hints for selecting a hyperlink (to open in current tab)   Shift+f Provide hints for selecting a hyperlink (to open in new tab)    URLs Open URL    Key Combination Description     o Open list of history/quickmarks as well as be able to provide own link to go to in current tab   Shift+o Open list of history/quickmarks as well as be able to provide own link to go to in new tab    Pages Page Navigation    Key Combination Description     gg Jump to top of page   Shift+g Jump to bottom of page   [N]+j Move down 1 line in page, or N lines if specified   [N]+k Move up 1 line in page, or N lines if specified    Page History    Key Combination Description     Shift+h Go back in history of current tab   Shift+l Go forward in history of current tab    Page Search    Key Combination Description     / Search for text in current tab   n Move forward in search in current tab   Shift+n Move backward in search in current tab    </description>
    </item>
    
    <item>
      <title>Raspbian Static IP</title>
      <link>https://chipsenkbeil.com/notes/raspbian-static-ip/</link>
      <pubDate>Sat, 22 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://chipsenkbeil.com/notes/raspbian-static-ip/</guid>
      <description>The main changes need to occur in /etc/dhcpcd.conf.
Find Interface Name Before editing that file, we need to look up our ethernet interface name. This used to be something easy like eth0, but Debian appears to have changed interface names. Run ifconfig to see Debian&amp;rsquo;s current interfaces. With the Raspberry Pi 3 B+, there will also be a wifi interface shown as below:
enxb827ebb61344: flags=4163&amp;lt;UP,BROADCAST,RUNNING,MULTICAST&amp;gt; mtu 1500 ether b8:27:eb:b6:13:44 txqueuelen 1000 (Ethernet) RX packets 24867 bytes 5952214 (5.</description>
    </item>
    
    <item>
      <title>Proxmox Changes</title>
      <link>https://chipsenkbeil.com/notes/proxmox-changes/</link>
      <pubDate>Sun, 14 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://chipsenkbeil.com/notes/proxmox-changes/</guid>
      <description>Removing subscription notice sed -i.bak &amp;#39;s/NotFound/Active/g&amp;#39; /usr/share/perl5/PVE/API2/Subscription.pm &amp;amp;&amp;amp; systemctl restart pveproxy.service Generating Let&amp;rsquo;s Encrypt certs https://pve.proxmox.com/wiki/HTTPS_Certificate_Configuration_(Version_4.x_and_newer)#Let.27s_Encrypt_using_acme.sh
Supporting port 80 &amp;amp; 443 By default, proxmox looks for traffic only on port 8006. Based on my readings online, forcefully changing the port - which is now hardcoded - can cause a lot of problems. Instead, the most recent and successful recommendation has been to use nginx to redirect traffic on port 80 and 443 to port 8006.</description>
    </item>
    
    <item>
      <title>Search Github</title>
      <link>https://chipsenkbeil.com/notes/search-github/</link>
      <pubDate>Mon, 13 Mar 2017 20:51:09 -0500</pubDate>
      
      <guid>https://chipsenkbeil.com/notes/search-github/</guid>
      <description>Couple of notes about searching on Github that have proven to be quite useful:
 You can include/exclude specific files using the filename property in a search.
The following searches for content &amp;ldquo;some content&amp;rdquo; only in .config files.
some content filename:.config The following searches for content &amp;ldquo;some content&amp;rdquo; in all files but .config files.
some content -filename:.config You can include/exclude specific users and organizations in a search. This is handy when I&amp;rsquo;m trying to judge how much use a library of mine is getting in the open source community while avoiding my own projects.</description>
    </item>
    
    <item>
      <title>Toggle Dvorak</title>
      <link>https://chipsenkbeil.com/notes/toggle-dvorak/</link>
      <pubDate>Fri, 12 Aug 2016 09:36:18 -0500</pubDate>
      
      <guid>https://chipsenkbeil.com/notes/toggle-dvorak/</guid>
      <description>In my ArchLinux setup with XMonad, I&amp;rsquo;ve found myself wanting to swap between QWERTY and Dvorak keyboard layouts when practicing Dvorak. While my Kinesis Advantage keyboard allows me to swap layouts at the hardware level (I&amp;rsquo;m assuming by simulating Dvorak on top of Qwerty), I also found a keyboard-agnostic way to do this.
Configuring Keypress Toggle For X11, create the following configuration at /etc/X11/xorg.conf.d/00-keyboard.conf:
# Read and parsed by systemd-localed.</description>
    </item>
    
    <item>
      <title>Fix for XMonad with XMobar</title>
      <link>https://chipsenkbeil.com/notes/fix-for-xmonad-with-xmobar/</link>
      <pubDate>Wed, 17 Feb 2016 07:49:30 -0600</pubDate>
      
      <guid>https://chipsenkbeil.com/notes/fix-for-xmonad-with-xmobar/</guid>
      <description>When I updated XMonad late last year (2015), I noticed a bug where any application that I opened on my first workspace would cover XMobar.
E.g. Opening a terminal or Vivaldi took up the entire screen. The solution I found was, conveniently, located in a post on the ArchLinux forum.
Essentially, you just need to add a handleEventHook with docksEventHook and handleEventHook defaultConfig.
-- My overall config that is used elsewhere myConfig = defaultConfig { manageHook = manageDocks &amp;lt;+&amp;gt; manageHook defaultConfig , layoutHook = avoidStruts $ layoutHook defaultConfig , handleEventHook = mconcat [ docksEventHook , handleEventHook defaultConfig ] , startupHook = setWMName &amp;#34;LG3D&amp;#34; , terminal = &amp;#34;urxvtcd&amp;#34; , modMask = mod1Mask , borderWidth = 1 , focusedBorderColor = &amp;#34;blue&amp;#34; }</description>
    </item>
    
    <item>
      <title>Using blkid to get device information</title>
      <link>https://chipsenkbeil.com/notes/blkid/</link>
      <pubDate>Wed, 07 Mar 2012 12:31:47 -0500</pubDate>
      
      <guid>https://chipsenkbeil.com/notes/blkid/</guid>
      <description>Quite often, I find myself needing to remind myself of devices connected to my computer so that I know what to type for the pmount program, which is really handy to have! The program [i]blkid[/i] is capable of doing this; however, I didn&amp;rsquo;t care for the default output and found myself using this format:
blkid -o list -c /dev/null What this does is tell the program to output the information in a user-friendly list of devices through &amp;lsquo;-o list&amp;rsquo; and not report previous devices using &amp;lsquo;-c /dev/null.</description>
    </item>
    
  </channel>
</rss>