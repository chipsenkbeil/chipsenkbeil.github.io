<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notes on Chip Senkbeil</title>
    <link>https://chipsenkbeil.com/notes/</link>
    <description>Recent content in Notes on Chip Senkbeil</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 14 Jan 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://chipsenkbeil.com/notes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Proxmox Changes</title>
      <link>https://chipsenkbeil.com/notes/promox-changes/</link>
      <pubDate>Sun, 14 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://chipsenkbeil.com/notes/promox-changes/</guid>
      <description>Removing subscription notice sed -i.bak &amp;#39;s/NotFound/Active/g&amp;#39; /usr/share/perl5/PVE/API2/Subscription.pm &amp;amp;&amp;amp; systemctl restart pveproxy.service Generating Let&amp;rsquo;s Encrypt certs https://pve.proxmox.com/wiki/HTTPS_Certificate_Configuration_(Version_4.x_and_newer)#Let.27s_Encrypt_using_acme.sh
Supporting port 80 &amp;amp; 443 By default, proxmox looks for traffic only on port 8006. Based on my readings online, forcefully changing the port - which is now hardcoded - can cause a lot of problems. Instead, the most recent and successful recommendation has been to use nginx to redirect traffic on port 80 and 443 to port 8006.</description>
    </item>
    
    <item>
      <title>Search Github</title>
      <link>https://chipsenkbeil.com/notes/search-github/</link>
      <pubDate>Mon, 13 Mar 2017 20:51:09 -0500</pubDate>
      
      <guid>https://chipsenkbeil.com/notes/search-github/</guid>
      <description>Couple of notes about searching on Github that have proven to be quite useful:
 You can include/exclude specific files using the filename property in a search.
The following searches for content &amp;ldquo;some content&amp;rdquo; only in .config files.
some content filename:.config The following searches for content &amp;ldquo;some content&amp;rdquo; in all files but .config files.
some content -filename:.config You can include/exclude specific users and organizations in a search. This is handy when I&amp;rsquo;m trying to judge how much use a library of mine is getting in the open source community while avoiding my own projects.</description>
    </item>
    
    <item>
      <title>Toggle Dvorak</title>
      <link>https://chipsenkbeil.com/notes/toggle-dvorak/</link>
      <pubDate>Fri, 12 Aug 2016 09:36:18 -0500</pubDate>
      
      <guid>https://chipsenkbeil.com/notes/toggle-dvorak/</guid>
      <description>In my ArchLinux setup with XMonad, I&amp;rsquo;ve found myself wanting to swap between QWERTY and Dvorak keyboard layouts when practicing Dvorak. While my Kinesis Advantage keyboard allows me to swap layouts at the hardware level (I&amp;rsquo;m assuming by simulating Dvorak on top of Qwerty), I also found a keyboard-agnostic way to do this.
Configuring Keypress Toggle For X11, create the following configuration at /etc/X11/xorg.conf.d/00-keyboard.conf:
# Read and parsed by systemd-localed.</description>
    </item>
    
    <item>
      <title>Fix for XMonad with XMobar</title>
      <link>https://chipsenkbeil.com/notes/fix-for-xmonad-with-xmobar/</link>
      <pubDate>Wed, 17 Feb 2016 07:49:30 -0600</pubDate>
      
      <guid>https://chipsenkbeil.com/notes/fix-for-xmonad-with-xmobar/</guid>
      <description>When I updated XMonad late last year (2015), I noticed a bug where any application that I opened on my first workspace would cover XMobar.
E.g. Opening a terminal or Vivaldi took up the entire screen. The solution I found was, conveniently, located in a post on the ArchLinux forum.
Essentially, you just need to add a handleEventHook with docksEventHook and handleEventHook defaultConfig.
-- My overall config that is used elsewhere myConfig = defaultConfig { manageHook = manageDocks &amp;lt;+&amp;gt; manageHook defaultConfig , layoutHook = avoidStruts $ layoutHook defaultConfig , handleEventHook = mconcat [ docksEventHook , handleEventHook defaultConfig ] , startupHook = setWMName &amp;#34;LG3D&amp;#34; , terminal = &amp;#34;urxvtcd&amp;#34; , modMask = mod1Mask , borderWidth = 1 , focusedBorderColor = &amp;#34;blue&amp;#34; }</description>
    </item>
    
    <item>
      <title>Using blkid to get device information</title>
      <link>https://chipsenkbeil.com/notes/blkid/</link>
      <pubDate>Wed, 07 Mar 2012 12:31:47 -0500</pubDate>
      
      <guid>https://chipsenkbeil.com/notes/blkid/</guid>
      <description>Quite often, I find myself needing to remind myself of devices connected to my computer so that I know what to type for the pmount program, which is really handy to have! The program [i]blkid[/i] is capable of doing this; however, I didn&amp;rsquo;t care for the default output and found myself using this format:
blkid -o list -c /dev/null What this does is tell the program to output the information in a user-friendly list of devices through &amp;lsquo;-o list&amp;rsquo; and not report previous devices using &amp;lsquo;-c /dev/null.</description>
    </item>
    
  </channel>
</rss>