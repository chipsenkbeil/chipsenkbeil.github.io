<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Senkbeil</title>
    <link>https://chipsenkbeil.com/tags/java/</link>
    <description>Recent content in Java on Senkbeil</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright &amp;#169; by Chip Senkbeil</copyright>
    
	<atom:link href="https://chipsenkbeil.com/tags/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CS 3114 (Data Structures 2) - Project 1</title>
      <link>https://chipsenkbeil.com/software/cs3114-project-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chipsenkbeil.com/software/cs3114-project-1/</guid>
      <description>The goal of this assignment was to demonstrate a basic understanding of memory management within a buffer. In the case of this assignment, least recently used (LRU) was the implementation for swapping blocks.
Please note that the code provided is an exact copy of my assignment as submitted in the class and has a flaw in the merging of blocks. This was corrected in project 4, which reused this project.</description>
    </item>
    
    <item>
      <title>CS 3114 (Data Structures 2) - Project 2</title>
      <link>https://chipsenkbeil.com/software/cs3114-project-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chipsenkbeil.com/software/cs3114-project-2/</guid>
      <description>The goal of this assignment was to demonstrate a basic understanding of multiple data structures being used together to provided different methods of traversing data. In this implementation, a quadtree and a binary search tree were used.
Please note that the code provided is an exact copy of my assignment as submitted in the class and has a flaw in the quadtree implementation. This was corrected in project 4, which used this project.</description>
    </item>
    
    <item>
      <title>CS 3114 (Data Structures 2) - Project 3</title>
      <link>https://chipsenkbeil.com/software/cs3114-project-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chipsenkbeil.com/software/cs3114-project-3/</guid>
      <description>The goal of this assignment was to demonstrate a basic understanding of external sorting by implementing heapsort externally and was tested with academically-provided data.
This project, for academic purposes, met all requirements with no issues in the implementation. While I cannot guarantee the code is clean as all of these projects were finished over the course of one/two days, the code itself appears to be stable.</description>
    </item>
    
    <item>
      <title>CS 3114 (Data Structures 2) - Project 4</title>
      <link>https://chipsenkbeil.com/software/cs3114-project-4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chipsenkbeil.com/software/cs3114-project-4/</guid>
      <description>The goal of this assignment was to demonstrate an understanding of how different programming concepts such as the use of data structures for specific situations as well as sorting implementations and how to adapt them for different cases.
The project required use of the previous three projects to implement an externally-sorted set of geographic point data along with an externally-stored quadtree, all of which was maintained using an LRU buffer.</description>
    </item>
    
  </channel>
</rss>