<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Utility on Senkbeil</title>
    <link>https://chipsenkbeil.com/tags/utility/</link>
    <description>Recent content in Utility on Senkbeil</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright &amp;#169; by Chip Senkbeil</copyright>
    <lastBuildDate>Fri, 12 Aug 2016 09:36:18 -0500</lastBuildDate>
    <atom:link href="https://chipsenkbeil.com/tags/utility/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Toggle Dvorak</title>
      <link>https://chipsenkbeil.com/note/toggle-dvorak/</link>
      <pubDate>Fri, 12 Aug 2016 09:36:18 -0500</pubDate>
      
      <guid>https://chipsenkbeil.com/note/toggle-dvorak/</guid>
      <description>

&lt;p&gt;In my ArchLinux setup with XMonad, I&amp;rsquo;ve found myself wanting to swap
between &lt;em&gt;QWERTY&lt;/em&gt; and &lt;em&gt;Dvorak&lt;/em&gt; keyboard layouts when practicing
&lt;em&gt;Dvorak&lt;/em&gt;. While my &lt;em&gt;Kinesis Advantage&lt;/em&gt; keyboard allows me to swap
layouts at the hardware level (I&amp;rsquo;m assuming by simulating Dvorak
on top of Qwerty), I also found a keyboard-agnostic way to do this.&lt;/p&gt;

&lt;h3 id=&#34;configuring-keypress-toggle&#34;&gt;Configuring Keypress Toggle&lt;/h3&gt;

&lt;p&gt;For X11, create the following configuration at
&lt;code&gt;/etc/X11/xorg.conf.d/00-keyboard.conf&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Read and parsed by systemd-localed. It&#39;s probably wise not to edit this file
# manually too freely.
Section &amp;quot;InputClass&amp;quot;
    Identifier &amp;quot;system-keyboard&amp;quot;
    MatchIsKeyboard &amp;quot;on&amp;quot;
    Option &amp;quot;XkbLayout&amp;quot; &amp;quot;us,us&amp;quot;
    Option &amp;quot;XkbModel&amp;quot; &amp;quot;,&amp;quot;
    Option &amp;quot;XkbVariant&amp;quot; &amp;quot;,dvorak&amp;quot;
    Option &amp;quot;XkbOptions&amp;quot; &amp;quot;grp:toggle&amp;quot;
EndSection
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This enables toggling Dvorak via &lt;code&gt;Right-Alt&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;configuring-visual-indicator-with-xmobar&#34;&gt;Configuring Visual Indicator with Xmobar&lt;/h3&gt;

&lt;p&gt;So, along with XMonad, I use Xmobar to display useful information such
as my current workspace, battery charge, and time. To avoid confusing
myself when switching between keyboard layouts, I added a visual
indicator in the right corner of Xmobar via the following:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-haskell&#34;&gt;-- Display of Xmobar information
, template = &amp;quot;%StdinReader%  }{ %battery% | %multicpu% | %coretemp% | %memory% | %dynnetwork% | %KAUS% | %date% || %kbd% &amp;quot;

, commands =
    [
    -- Series of commands to run on Xmobar
    -- ...

    -- keyboard layout indicator
    , Run Kbd            [ (&amp;quot;us(dvorak)&amp;quot; , &amp;quot;&amp;lt;fc=#00008B&amp;gt;DV&amp;lt;/fc&amp;gt;&amp;quot;)
                         , (&amp;quot;us&amp;quot;         , &amp;quot;&amp;lt;fc=#8B0000&amp;gt;US&amp;lt;/fc&amp;gt;&amp;quot;)
                         ]
    ]
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Using blkid to get device information</title>
      <link>https://chipsenkbeil.com/note/blkid/</link>
      <pubDate>Wed, 07 Mar 2012 12:31:47 -0500</pubDate>
      
      <guid>https://chipsenkbeil.com/note/blkid/</guid>
      <description>&lt;p&gt;Quite often, I find myself needing to remind myself of devices connected to my
computer so that I know what to type for the pmount program, which is really
handy to have! The program [i]blkid[/i] is capable of doing this; however, I
didn&amp;rsquo;t care for the default output and found myself using this format:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;blkid -o list -c /dev/null
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://chipsenkbeil.com/img/post/blkid.jpg&#34; alt=&#34;Example of usage&#34; /&gt;&lt;/p&gt;

&lt;p&gt;What this does is tell the program to output the information in a user-friendly
list of devices through &amp;lsquo;-o list&amp;rsquo; and not report previous devices using &amp;lsquo;-c
/dev/null.&amp;rsquo;&lt;/p&gt;

&lt;p&gt;As you can imagine, this is very annoying to type out each time. It is also
annoying to include &amp;lsquo;sudo&amp;rsquo; in front of it when I am not the root user. The
program will still output some information, but to display everything I want,
it needs root permissions.&lt;/p&gt;

&lt;p&gt;So, to make this as painless as possible, I wrote a very small wrapper script
that does this task for me:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#! /bin/sh

if [[ $UID != 0]]; then
    echo &amp;quot;This script requires root privileges to run:&amp;quot;
    echo &amp;quot;sudo $0 $*&amp;quot;
fi

blkid -o list -c /dev/null
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sticking that in the file list_devices.sh, giving it proper permissions for
execution using chmod +x list_devices.sh, and sticking it in my /usr/bin
directory did wonders for me. Hopefully it&amp;rsquo;ll help someone else out there as
well!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>File Patcher</title>
      <link>https://chipsenkbeil.com/software/file-patcher/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chipsenkbeil.com/software/file-patcher/</guid>
      <description>&lt;p&gt;Old program I wrote in C# for a game engine, no longer in development, that
parses an XML file for a couple of commands with the intention of using it
to download new game patches and apply them.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>tmux XMonad bindings</title>
      <link>https://chipsenkbeil.com/software/tmux-xmonad-bindings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chipsenkbeil.com/software/tmux-xmonad-bindings/</guid>
      <description>&lt;p&gt;Contains a tmux configuration script to provide XMonad-like keyboard bindings.
Also contains necessary utility functions to capture modifier keys (like shift)
needed for XMonad.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>